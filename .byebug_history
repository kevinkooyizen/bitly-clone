redirect "/"
@url.to_json
@url
c
@url.errors.messages[:short_url]
@url.to_json
@url
c
params
@url
@byebug
exit
@url.short_url
@url
self.short_url
self
self.short_url
@url
@url.errors.messages[:short_url]
@url.errors.messages[short_url]
@url.errors.messages.short_url
@url.errors.messages
@url.errors
exit
@url
exit
@url.errors
url.errors
url.erros
exit
@pie
exit
@pie
exit
@pie
exit
@pie
exit
@pie
exit
@pi
exit
p i
exit
p i
exit
p i
exit
p i
exit
p i
i.gsub("\n", " ")
p i
exit
p i.insert(-4, ', ')exit
p i.insert(-4, ', ')
p i.insert(-4, 'hi')
p i.insert(-5, 'hi')
p i.insert(-5, "hi")
i.insert!(-5, "hi")
i.insert(-5, "hi")
i.gsub("\n", " ")
p i
exit
p i
i
i.slice! "\n"
p i
i
a = i.slice "\n"
p a = i.slice "\n"
p i.slice "\n"
p i.slice(-2)
p i
i.slice(-2)
p i
exit
c
@pie
exit
@pie
exit
p pie
pie
exit
long_string
exit
long_string
exit
long_string
long_url
exit
long_string
exit
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b[-a-zA-Z0-9@:%_\+.~?&\/\/=]*)/)[0].join
exit
p i
exit
extracted_long
exit
c
extracted_long
exit
extracted_long
exit
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0].join
exit
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0].join
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0].to_s
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0].flatten.to_s
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0].flatten
i.scan(/(https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)[0]
i.scan((/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*))/)
i.scan(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~?&\/\/=]*)/)
exit
i.scan(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*/)
i.scan
p i
exit
p i
i
values.split(",")[0]
values.split(",")
values.split
values
c
params[:long_url]
params
c
u.long_url
c
#{u.long_url}
u.long_url
c
@url.errors.details
@url.errors.details.values
@url.errors.details.values_at[:value]
@url.errors.details.values_at(:value)
@url.errors.details.values.values
@url.errors.details.values
@url.errors.details[0]
@url.errors.details
@url.errors
@url.errors.messages.values.flatten.join.capitalize
@url.errors.messages.values.flatten.join.capitalise
@url.errors.messages.values.flatten.join
@url.errors.messages.values.flatten
@url.errors.messages.values
@url.errors
@url.errors.messages
i.message
i.messages
c
@url.long_url
@url
c
@url
c
i.values[1]
i.values[0].to_s
i.values[0]
c
@givenerror
@url.errors.details[:long_url][0]
@url.errors.details[:long_url]
@givenerror
c
@givenerror["q"
@givenerror
c
p q
q
p
c
p
p q
p p
p j
p i
i
c
@url.errors.details
@url.errors.details[:long_url]
p j
p i
i
c
@givenerror
c
i.values
p i
i
@url
c
j
j.to_s
j.to_s.has_a?(":error")
j.has_a?(":error")
j.is_a?(":error")
j
@url.errors.details
@url
i.values
i.value
value
j.value
j
c
j
c
j
c
p i
i
j
exit
i.keys[0]
i.keys
i.values
i.each
i[0]
p i
i
i.error
@url.errors.details[:long_url]
@url
i.error
p i
i
c
@url
p i
i
exit
@url.errors.details[:long_url]
@url.errors.details
@url.errors.details[0]
@url.errors.details[:long_url][0]
@url.errors.details[:long_url].flatten
@url.errors.details[:long_url]
@url.errors.details[:long_url].q_values
@url.errors.details[:long_url].values_at(value)
@url.errors.details[:long_url].values_at
@url.errors.details[:long_url].value
@url.errors.details[:long_url].error
@url.errors.details[:long_url]
@url.errors.details
@url.errors
@url.error
@url.errors.error
@url.errors.details
@url.errors
@url
c
@url
exit
